---
name: Build and publish Docker Image for mkdocs files

on:
  workflow_call:
    secrets:
      gh_clone_pat:
        required: true
    inputs:
      image_name:
        description: 'The image name to use when building'
        required: true
        type: string
      mkdocs_repo:
        description: 'The mkdocs repo to use when building'
        required: true
        type: string
      registry:
        description: 'The registry to use for hosting the images'
        required: false
        default: 'ghcr.io'
        type: string
      dockerfile:
        description: 'The folder where the image is built from'
        required: false
        default: './Dockerfile'
        type: string
      context_dir:
        description: 'The folder where the image is built from'
        required: false
        default: '.'
        type: string
      build_contexts:
        description: 'The named build contexts to use'
        required: false
        default: ''
        type: string
      platforms:
        description: 'The architecture to build the image for'
        required: false
        default: 'linux/amd64'
        type: string
      build_target:
        description: 'The target at which to build the image'
        required: false
        default: ''
        type: string
      run_on_runners:
        description: 'The Runners that build the image'
        required: false
        default: 'self-hosted'
        type: string

jobs:
  build:
    name: Build & Push Docker Image - ${{ inputs.image_name }}
    runs-on: ["${{ inputs.run_on_runners }}"]
    permissions:
      contents: read
      packages: write
    env:
      env_vars: ${{ secrets.env_vars }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout mkdocs repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.mkdocs_repo }}
          token: ${{ secrets.gh_clone_pat }}
          path: markdown-repo

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
        # with:
        #   buildkitd-flags: --debug

      - name: Extract Docker metadata for ${{ inputs.registry }}
        id: metadata-ghcr
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}
          tags: |
            # set latest tag for main branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # branch event
            type=ref,event=branch
            # tag event
            type=ref,event=tag
            # pull request event
            type=ref,event=pr
            # minimal (short sha)
            type=sha,prefix=,format=short,enable=true
            # full length sha
            type=sha,prefix=,format=long,enable=true
            # type=semver,pattern={{version}}
            # type=semver,pattern={{major}}.{{minor}}
            # type=schedule
            # set latest tag for default branch
            # type=raw,value=latest,enable={{is_default_branch}}

      - name: Log into registry ${{ inputs.registry }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to ${{ inputs.registry }}
        id: build-and-push-image
        uses: docker/build-push-action@v6
        if: ${{ inputs.build_target == '' }}
        with:
          context: ${{ inputs.context_dir }}
          build-contexts: ${{ inputs.build_contexts }}
          file: ${{ inputs.dockerfile }}
          tags: ${{ steps.metadata-ghcr.outputs.tags }}
          labels: ${{ steps.metadata-ghcr.outputs.labels }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          platforms: ${{ inputs.platforms }}
          push: true

      - name: Build and push Docker image to ${{ inputs.registry }} at defined target - ${{ inputs.build_target }}
        id: build-and-push-image-with-target
        uses: docker/build-push-action@v6
        if: ${{ inputs.build_target != '' }}
        with:
          context: ${{ inputs.context_dir }}
          build-contexts: ${{ inputs.build_contexts }}
          file: ${{ inputs.dockerfile }}
          tags: ${{ steps.metadata-ghcr.outputs.tags }}
          labels: ${{ steps.metadata-ghcr.outputs.labels }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          platforms: ${{ inputs.platforms }}
          push: true
          target: ${{ inputs.build_target }}
